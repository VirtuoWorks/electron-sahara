{
  "info": {
    "exec": "[CLI] Starting sahara cli...",
    "command": {
      "create": "[COMMAND] Create",
      "help": "[COMMAND] Help",
      "info": "[COMMAND] Information",
      "requirements": "[COMMAND] Requirements",
      "platform": "[COMMAND] Platform",
      "prepare": "[COMMAND] Prepare",
      "compile": "[COMMAND] Compile",
      "build": "[COMMAND] Build",
      "clean": "[COMMAND] Clean",
      "run": "[COMMAND] Run"
    },
    "arguments": {
      "available": "[IN PROGRESS] Command arguments were provided..."
    },
    "module": {
      "available": "[IN PROGRESS] Command module has been found..."
    },
    "directory": {
      "create": "[IN PROGRESS] Creating directory [%s]...",
      "deletion": "[IN PROGRESS] Deleting project directory [%s]..."
    },
    "files": {
      "copy": "[IN PROGRESS] Copying files..."
    },
    "template": {
      "clone": "[IN PROGRESS] Cloning template from git repo..."
    },
    "dependencies": {
      "install": "[IN PROGRESS] Installing template dependencies..."
    },
    "packager": {
      "loading": "[IN PROGRESS] Loading Electron Packager...",
      "building": "[IN PROGRESS] Electron Packager is building a release for platform [%s]..."
    },
    "platform": {
      "prepare": "[IN PROGRESS] Plateform [%s] is being prepared...."
    },
    "sahara": {
      "verboseEnabled": "[INFO] Sahara running in verbose mode...",
      "projectDirectory": "[INFO] Sahara.json file found. Working in Sahara project directory...",
      "notAProjectDirectory": "[INFO] Sahara.json file not found. Not working in a Sahara project directory..."
    }
  },
  "prompt": {
    "directory": {
      "deletion": "[CONFIRM] (y|yes|n|no) Are you sure you want to delete [%s] (y|yes|n|no) ? "
    }
  },
  "error": {
    "command": {
      "create": "[ERROR] Project could not be created.",
      "notFound": "[ERROR] Command not found. Check help below.",
      "notImplemented": "[ERROR] This command is not yet implemented.",
      "aborted": "[NOTICE] Operation aborted.",
      "platform": "[ERROR] Platform action could not be done.",
      "prepare": "[ERROR] Could not prepare platform.",
      "compile": "[ERROR] Platform could not be compiled.",
      "build": "[ERROR] Could not build platform."
    },
    "sahara": {
      "configurationFile": "[ERROR] Check your configuration file. Error(s) detected (%s)."
    },
    "argument": {
      "missing": "[ERROR] Missing command argument. Check help below."
    },
    "action": {
      "invalid": "[ERROR] Invalid action. Check help below.",
      "notImplemented": "[ERROR] This action is not yet implemented."
    },
    "directory": {
      "resolve": "[ERROR] Could not resolve [%s] directory name.",
      "create": "[ERROR] Could not create [%s] directory.",
      "deletion": "[ERROR] Could not delete [%s] directory."
    },
    "template": {
      "clone": "[ERROR] Could not clone template from git repo.",
      "notFound": "[ERROR] Could not find this template."
    },
    "dependencies": {
      "install": "[ERROR] Could not install project dependencies."
    },
    "packager": {
      "resolve": "[ERROR] Could not resolve electron-packager path.",
      "require": "[ERROR] Could not load electron-packager module.",
      "build": "[ERROR] Could not build release for platform [%s] with electron-packager."
    },
    "platform": {
      "prepare": "[ERROR] Could not prepare [%s] platform.",
      "invalid": "[ERROR] Platform [%s] is invalid."
    },
    "help": {
      "missingSaharaHelpFile": "[ERROR] Sahara main help file missing or inaccessible."
    }
  },
  "done": {
    "command": {
      "create": "[DONE] New Sahara project created !",
      "prepare": "[DONE] Platform has been successfully prepared !",
      "compile": "[DONE] Platform has been successfully compiled !",
      "platform": "[DONE] Platform action has been successful !",
      "build": "[DONE] Platform has been built successfully !"
    },
    "directory": {
      "created": "[DONE] Directory [%s] created !"
    },
    "dependencies": {
      "install": "[DONE] Project dependencies installed !"
    },
    "template": {
      "cloned": "[DONE] Project template cloned from git repo !"
    },
    "platform": {
      "prepare": "[DONE] Plateform [%s] has been successfully prepared !"
    },
    "packager": {
      "loaded": "[DONE] Electron Packager loaded successfully !",
      "built": "[DONE] Release has been build for platform [%s] !"
    }
  }
}